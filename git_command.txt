git config user.name "ricky"
git config user.email "hsu_wp@hotmail.com"
 
#git config --global --unset user.name 取消全局设置
#git config --global --unset user.email 取消全局设置

#2 创建版本库：
 mkdir testgit
cd /Users/wupeng/mygithub/testget



######## windows
cd ricky_github/
git config user.name "ricky"
git config user.email "hsu_wp@hotmail.com"

#用命令git add告诉Git，把文件添加到仓库：
 git add readme.txt

 第二步，用命令git commit告诉Git，把文件提交到仓库：
$ git commit -m "wrote a readme file"


为什么Git添加文件需要add，commit一共两步呢？因为commit可以一次提交很多文件，所以你可以多次add不同的文件，比如：
$ git add file1.txt
$ git add file2.txt
$ git add file3.txt
$ git commit -m "add 3 files."

#查看diff
git diff readme.txt 

#命令可以让我们时刻掌握仓库当前的状态，上面的命令告诉我们，readme.txt被修改过了，但还没有准备提交的修改。
git status

##版本回退
1.git log可以查看提交历史，以便确定要回退到哪个版本。
2.git reset --hard commit_id。HEAD指向的版本就是当前版本
3.git reflog查看命令历史，以便确定要回到未来的哪个版本。
，每次修改，如果不add到暂存区，那就不会加入到commit中。

##撤销修改：
 git checkout -- readme.txt
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。


## 删除文件：

 git rm f.txt
 git commit -m "rm -f "
 git status
 #没有commit ,恢复误删除：

